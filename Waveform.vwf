/*<simulation_settings>
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off SCOMP -c SCOMP --vector_source="E:/Project/Waveform.vwf" --testbench_file="E:/Project/simulation/qsim/Waveform.vwf.vht"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off SCOMP -c SCOMP --vector_source="E:/Project/Waveform.vwf" --testbench_file="E:/Project/simulation/qsim/Waveform.vwf.vht"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=vhdl --output_directory="E:/Project/simulation/qsim/" SCOMP -c SCOMP</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=vhdl --output_directory="E:/Project/simulation/qsim/" SCOMP -c SCOMP</tnetlist_cmd>
<modelsim_script>onerror {exit -code 1}
vlib work
vcom -work work SCOMP.vho
vcom -work work Waveform.vwf.vht
vsim -c -t 1ns -L cyclonev -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.SCOMP_System_vhd_vec_tst
vcd file -direction SCOMP.msim.vcd
vcd add -internal SCOMP_System_vhd_vec_tst/*
vcd add -internal SCOMP_System_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f

</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vcom -work work SCOMP.vho
vcom -work work Waveform.vwf.vht
vsim -novopt -c -t 1ps -sdfmax SCOMP_System_vhd_vec_tst/i1=SCOMP_vhd.sdo -L cyclonev -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.SCOMP_System_vhd_vec_tst
vcd file -direction SCOMP.msim.vcd
vcd add -internal SCOMP_System_vhd_vec_tst/*
vcd add -internal SCOMP_System_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f

</modelsim_script_timing>
<hdl_lang>vhdl</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2020  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("LEDR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("KEY0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("PAGE_INDEX")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("PAGE_INDEX[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_INDEX";
}

SIGNAL("PAGE_INDEX[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_INDEX";
}

SIGNAL("PAGE_INDEX[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_INDEX";
}

SIGNAL("PAGE_INDEX[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_INDEX";
}

SIGNAL("PAGE_INDEX[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_INDEX";
}

SIGNAL("PAGE_INDEX[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_INDEX";
}

SIGNAL("PAGE_INDEX[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_INDEX";
}

SIGNAL("PAGE_INDEX[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_INDEX";
}

SIGNAL("PAGE_OFFSET")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("PAGE_OFFSET[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_OFFSET";
}

SIGNAL("PAGE_OFFSET[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_OFFSET";
}

SIGNAL("PAGE_OFFSET[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_OFFSET";
}

SIGNAL("PAGE_OFFSET[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_OFFSET";
}

SIGNAL("PAGE_OFFSET[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_OFFSET";
}

SIGNAL("PAGE_OFFSET[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_OFFSET";
}

SIGNAL("PAGE_OFFSET[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_OFFSET";
}

SIGNAL("PAGE_OFFSET[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_OFFSET";
}

SIGNAL("PAGE_OFFSET[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_OFFSET";
}

SIGNAL("PAGE_OFFSET[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "PAGE_OFFSET";
}

SIGNAL("MEM_DATA_INPUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("MEM_DATA_INPUT[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("MEM_DATA_INPUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "MEM_DATA_INPUT";
}

SIGNAL("DATA_OUTPUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("DATA_OUTPUT[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("DATA_OUTPUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "DATA_OUTPUT";
}

SIGNAL("clock_50")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("LEDR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("LEDR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("LEDR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("LEDR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("LEDR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("LEDR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("LEDR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("LEDR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("LEDR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("LEDR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("KEY0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 29.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_INDEX[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_INDEX[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_INDEX[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_INDEX[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_INDEX[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_INDEX[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_INDEX[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_INDEX[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_OFFSET[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_OFFSET[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_OFFSET[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_OFFSET[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_OFFSET[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_OFFSET[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_OFFSET[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_OFFSET[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_OFFSET[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("PAGE_OFFSET[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("MEM_DATA_INPUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("DATA_OUTPUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 39.0;
		LEVEL 0 FOR 61.0;
	}
}

TRANSITION_LIST("clock_50")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 61.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clock_50";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KEY0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_INDEX";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
	CHILDREN = 14, 15, 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_INDEX[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_INDEX[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_INDEX[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_INDEX[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_INDEX[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_INDEX[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_INDEX[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_INDEX[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_OFFSET";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26, 27, 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_OFFSET[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_OFFSET[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_OFFSET[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_OFFSET[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_OFFSET[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_OFFSET[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_OFFSET[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_OFFSET[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_OFFSET[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "PAGE_OFFSET[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
	CHILDREN = 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA_INPUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
	CHILDREN = 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUTPUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 50;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
